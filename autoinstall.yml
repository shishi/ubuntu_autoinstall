#cloud-config
autoinstall:
  version: 1

  # インタラクティブセクション - ユーザー名とホスト名の入力を求める
  interactive-sections:
    - identity

  # LTS compatible configuration
  source:
    id: ubuntu-server
    search_drivers: true

  # Locale and keyboard configuration
  locale: en_US.UTF-8
  keyboard:
    layout: us

  # Network configuration
  network:
    version: 2
    ethernets:
      any:
        match:
          name: "en*"
        dhcp4: true
        dhcp6: true

  # Storage configuration with LVM and LUKS encryption
  storage:
    config:
      # Disk selection
      - type: disk
        id: disk0
        match:
          size: largest
        ptable: gpt
        wipe: superblock-recursive
        preserve: false
        grub_device: true

      # EFI System Partition (1GB for Ubuntu 24.04)
      - type: partition
        id: partition-efi
        device: disk0
        size: 1G
        flag: boot
        number: 1
        preserve: false

      # Boot partition (2GB for kernels)
      - type: partition
        id: partition-boot
        device: disk0
        size: 2G
        number: 2
        preserve: false

      # Main partition for LUKS
      - type: partition
        id: partition-luks
        device: disk0
        size: -1
        number: 3
        preserve: false
        partname: partition-luks  # Use partname instead of name

      # LUKS encryption
      - type: dm_crypt
        id: luks-root
        volume: partition-luks
        key: passphrase
        passphrase: "TemporaryUbuntu2024!TPM2WillReplace@InitialBoot#Secure"
        preserve: false

      # LVM on LUKS
      - type: lvm_volgroup
        id: vg0
        name: ubuntu-vg
        devices:
          - luks-root
        preserve: false

      # Root volume (90% of VG)
      - type: lvm_partition
        id: lv-root
        volgroup: vg0
        name: root
        size: 90%
        preserve: false

      # Swap volume (10% of VG)
      - type: lvm_partition
        id: lv-swap
        volgroup: vg0
        name: swap
        size: 10%
        preserve: false

      # Filesystems
      - type: format
        id: fs-efi
        volume: partition-efi
        fstype: fat32
        preserve: false

      - type: format
        id: fs-boot
        volume: partition-boot
        fstype: ext4
        preserve: false

      - type: format
        id: fs-root
        volume: lv-root
        fstype: ext4
        preserve: false

      - type: format
        id: fs-swap
        volume: lv-swap
        fstype: swap
        preserve: false

      # Mount points
      - type: mount
        id: mount-root
        device: fs-root
        path: /

      - type: mount
        id: mount-boot
        device: fs-boot
        path: /boot

      - type: mount
        id: mount-efi
        device: fs-efi
        path: /boot/efi

      - type: mount
        id: mount-swap
        device: fs-swap
        path: none

  # Identity configuration - required when using interactive-sections
  identity:
    hostname: ubuntu-server
    username: ubuntu
    password: "$6$exDY1mhS4KUYCE/2$zmn9ToZwTKLhCw.b4/b.ZRTIZM30JZ4QrOQ2aOXJ8yk96xpcCof0kxKwuX1kqLG/ygbJ1f8wxED22bTL4F46P0"

  # SSH configuration
  ssh:
    install-server: true
    allow-pw: true

  # Package selection
  packages:
    - tpm2-tools
    - systemd-cryptenroll
    - cryptsetup-initramfs
    - cryptsetup-bin
    - git
    - build-essential
    - pkg-config
    - libssl-dev
    - xz-utils

  # User data for cloud-init (executed after first boot)
  user-data:
    timezone: Asia/Tokyo
    write_files:
      # First boot setup service
      - path: /etc/systemd/system/first-boot-setup.service
        content: |
          [Unit]
          Description=First Boot Setup
          ConditionPathExists=!/var/lib/first-boot-complete
          After=multi-user.target
          
          [Service]
          Type=oneshot
          RemainAfterExit=yes
          ExecStart=/usr/local/bin/enroll-tpm2-luks
          ExecStart=/usr/local/bin/install-nix
          ExecStartPost=/usr/bin/touch /var/lib/first-boot-complete
          StandardOutput=journal+console
          StandardError=journal+console
          
          [Install]
          WantedBy=multi-user.target
    # Enable the first boot service
    runcmd:
      - systemctl enable first-boot-setup.service

  # Late commands - executed in the target system before reboot
  late-commands:
    # Enable TPM2 LUKS enrollment service
    - curtin in-target --target=/target -- systemctl enable systemd-cryptenroll@partition-luks.service || true
    # Configure crypttab for initramfs
    - 'curtin in-target --target=/target -- sh -c "LUKS_UUID=$(blkid -s UUID -o value /dev/disk/by-partlabel/partition-luks 2>/dev/null || echo none); if [ \"$LUKS_UUID\" != \"none\" ]; then echo \"luks-$LUKS_UUID UUID=$LUKS_UUID none luks,discard,initramfs\" > /etc/crypttab; fi"'
    # Update initramfs with crypto support
    - curtin in-target --target=/target -- update-initramfs -c -k all
    # Setup sudoers for the primary user
    - 'curtin in-target --target=/target -- sh -c "USERNAME=$(getent passwd 1000 | cut -d: -f1); if [ -n \"$USERNAME\" ]; then echo \"$USERNAME ALL=(ALL) NOPASSWD:ALL\" > /etc/sudoers.d/$USERNAME && chmod 440 /etc/sudoers.d/$USERNAME; fi"'
    # Set kernel parameters for GRUB
    - 'curtin in-target --target=/target -- sh -c "sed -i \"s/^GRUB_CMDLINE_LINUX_DEFAULT=.*/GRUB_CMDLINE_LINUX_DEFAULT=\\\"quiet splash\\\"/\" /etc/default/grub"'
    - 'curtin in-target --target=/target -- sh -c "sed -i \"s/^GRUB_CMDLINE_LINUX=.*/GRUB_CMDLINE_LINUX=\\\"rd.luks.options=discard\\\"/\" /etc/default/grub"'
    - curtin in-target --target=/target -- update-grub
    # Create TPM2 enrollment helper script
    - 'curtin in-target --target=/target -- sh -c "mkdir -p /usr/local/bin && cat > /usr/local/bin/enroll-tpm2-luks <<\"EOF\"
#!/bin/bash
# TPM2 LUKS enrollment script
if [ -e /dev/tpm0 ] || [ -e /dev/tpmrm0 ]; then
    echo \"Enrolling TPM2 for LUKS unlock...\"
    systemd-cryptenroll --tpm2-device=auto --tpm2-pcrs=0+7 /dev/disk/by-partlabel/partition-luks || echo \"TPM2 enrollment failed\"
else
    echo \"No TPM device found\"
fi
EOF
chmod 755 /usr/local/bin/enroll-tpm2-luks"'
    # Install Nix package manager script
    - 'curtin in-target --target=/target -- sh -c "cat > /usr/local/bin/install-nix <<\"EOF\"
#!/bin/bash
# Install Nix package manager
if ! command -v nix >/dev/null 2>&1; then
    curl -L https://nixos.org/nix/install | sh -s -- --daemon
fi
EOF
chmod 755 /usr/local/bin/install-nix"'
    # Add recovery key
    - 'curtin in-target --target=/target -- sh -c "RECOVERY_KEY=$(openssl rand -base64 32); echo -n \"$RECOVERY_KEY\" | cryptsetup luksAddKey /dev/disk/by-partlabel/partition-luks - && echo \"$RECOVERY_KEY\" > /root/luks-recovery-key.txt && chmod 600 /root/luks-recovery-key.txt"'

  # Shutdown action after installation
  shutdown: reboot
